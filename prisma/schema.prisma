// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  confirmation  Confirmation?
  registration  Registration?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Registration {
  id                     String  @id @default(cuid())
  name                   String
  email                  String
  phonenumber            String
  age                    Int
  job                    String
  affiliation            String
  major                  String?
  socialmedia            String
  allergy                String?
  specialneeds           String
  selfdescription        String
  photo_url              String
  motivation             String
  hopes                  String
  participationscale     Int
  communityparticipation String?
  potentialstory         String?
  userId                 String  @unique
  user                   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Confirmation {
  id         String  @id @default(cuid())
  attendance Boolean @default(false)
  userId     String  @unique
  user       User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}
